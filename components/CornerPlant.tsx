/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.0 public/assets/corner_plant.glb -o CornerPlant.tsx --transform 
Files: public/assets/corner_plant.glb [19.35MB] > C:\Users\Arteiro\Documents\Projetos\web\arteiro\corner_plant-transformed.glb [2.41MB] (88%)
*/

import { useGLTF } from "@react-three/drei";
import * as THREE from "three";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
	nodes: {
		Cube011: THREE.Mesh;
		Cube011_1: THREE.Mesh;
		Cube011_2: THREE.Mesh;
		Cube011_3: THREE.Mesh;
		stone458: THREE.Mesh;
	};
	materials: {
		["pot.001"]: THREE.MeshStandardMaterial;
		dirt: THREE.MeshStandardMaterial;
		bamboo: THREE.MeshStandardMaterial;
		["leaf.bamboo"]: THREE.MeshStandardMaterial;
	};
};

export function CornerPlant(props: JSX.IntrinsicElements["group"]) {
	const { nodes, materials } = useGLTF(
		"/assets/corner_plant-transformed.glb"
	) as GLTFResult;
	return (
		<group {...props} dispose={null}>
			<mesh
				geometry={nodes.stone458.geometry}
				material={materials.bamboo}
				position={[-0.116, 0.382, -0.007]}
				rotation={[-2.582, -0.196, -2.448]}
				scale={0.442}
			/>
			<mesh geometry={nodes.Cube011.geometry} material={materials["pot.001"]} />
			<mesh geometry={nodes.Cube011_1.geometry} material={materials.dirt} />
			<mesh geometry={nodes.Cube011_2.geometry} material={materials.bamboo} />
			<mesh
				geometry={nodes.Cube011_3.geometry}
				material={materials["leaf.bamboo"]}
			/>
		</group>
	);
}

useGLTF.preload("/assets/corner_plant-transformed.glb");
